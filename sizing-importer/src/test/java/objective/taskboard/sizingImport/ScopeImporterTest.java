package objective.taskboard.sizingImport;

import org.junit.Test;

public class ScopeImporterTest {

    private ScopeImporterTestDSL dsl = new ScopeImporterTestDSL();

    @Test
    public void importNoLines_shouldFinishWithSuccessWithoutLinesToImport() {
        dsl.jira()
            .withProject()
                .key("PX")
            .eoP().sizing();

        dsl.sizing()
            .importedToProject("PX")
            .then()
                .withLinesToImport(0)
                .importIsFinished()
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importALineAlreadyImported_shouldFinishWithSuccessWithoutLinesToImport() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .isDemand()
                    .ofI()
                .eoIs()
            .eoP();

        dsl.sizing()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                    .key("PX-10")
                .eoL()
            .eoLs()
            .importedToProject("PX")
            .then()
                .withLinesToImport(0)
                .importIsFinished()
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importLineMissingFeatureValue_shouldRejectLineAndReportError() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .withLinesToImport(1)
                .withError("Feature should be informed")
                .importIsFinished()
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importLineWithInvalidType_shouldRejectLineAndReportError() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .name("Banana")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                    .eoF()
                    .feature()
                        .name("Task")
                    .eoF()
                    .feature()
                        .name("Timebox")
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .name("Banana")
                    .type("Bug")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .withLinesToImport(1)
                .withError("Type should be one of the following: Feature, Task, Timebox")
                .importIsFinished()
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importLineWithMissingRequiredSizingFieldValue_ShouldRejectLineAndReportError() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                        .withCustomField()
                            .name("Dev TSize")
                            .withId("f1")
                            .isRequired()
                        .eoCf()
                        .withCustomField()
                            .name("UAT TSize")
                            .withId("f2")
                        .eoCf()
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                .eoL()
            .eoLs()
            .importedToProject("PX")
            .then()
                .rejectLine(1)
                .withError("Dev TSize should be informed")
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importLineWithMissingRequiredExtraFieldValue_ShouldRejectLineAndReportError() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .name("Blue")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                        .withCustomField()
                            .name("Use Cases")
                            .withId("f9")
                            .isRequired()
                        .eoCf()
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .rejectLine(1)
                .withError("Use Cases should be informed")
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importLineWithoutSizingAndExtraFields_shouldImportWithSuccessAndReportIt() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .name("Blue")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PX-15")
                        .name("Banana")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .importIsFinished()
                .withSuccessfulIssueImported("PX-15");
    }

    @Test
    public void shouldImportTimeboxLine_shouldImportWithSuccessAndReportHim() {
        dsl.jira()
            .withProject()
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .name("Blue")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PX-15")
                        .name("Banana")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Timebox")
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .config()
                .withTimeboxColumnLetter("S")
            .eoC()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Infrastructure")
                    .name("Proof of Concept")
                    .timebox("80")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .importIsFinished()
                .withSuccessfulIssueImported("PX-15");
    }

    @Test
    public void importFourLinesWithOneWithKeyFilled_shouldImportTreeIssuesAndReportTheSuccess() {
        dsl.jira()
            .withProject()
                .name("Project X")
                .key("PX")
                .withExistingIssues()
                    .issue()
                        .key("PX-2")
                        .name("Blue")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PX-3")
                        .name("Red")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PX-15")
                        .name("Banana")
                    .ofI()
                    .issue()
                        .key("PX-16")
                        .name("Lemon")
                    .ofI()
                    .issue()
                        .key("PX-17")
                        .name("Grape")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                        .withCustomField()
                            .name("Dev TSize")
                            .withId("f1")
                        .eoCf()
                        .withCustomField()
                            .name("UAT TSize")
                            .withId("f2")
                        .eoCf()
                        .withCustomField()
                            .name("Use Cases")
                            .withId("f3")
                        .eoCf()
                    .eoF()
                    .feature()
                        .name("Task")
                        .withCustomField()
                            .name("Task TSize")
                            .withId("f5")
                        .eoCf()
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .config()
                .extraField()
                    .columnHeader("Dev TSize")
                    .id("f1")
                    .mappedToColumn("E")
                .eoEf()
                .extraField()
                    .columnHeader("UAT TSize")
                    .id("f2")
                    .mappedToColumn("F")
                .eoEf()
                .extraField()
                    .columnHeader("Task TSize")
                    .id("f5")
                    .mappedToColumn("G")
                .eoEf()
                .extraField()
                    .columnHeader("Use Cases")
                    .id("f3")
                    .mappedToColumn("H")
                .eoEf()
            .eoC()
            .lines()
                .line()
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                .eoL()
                .line()
                    .phase("One")
                    .demand("Blue")
                    .task("Lemon")
                    .withExtraColumns()
                        .column()
                            .name("Task TSize")
                            .value("M")
                            .isTypeSizing()
                        .eoC()
                    .eoEc()
                .eoL()
                .line()
                    .phase("One")
                    .demand("Red")
                    .feature("Grape")
                    .withExtraColumns()
                        .column()
                            .name("Dev TSize")
                            .value("X")
                            .isTypeSizing()
                        .eoC()
                        .column()
                            .name("UAT TSize")
                            .value("S")
                        .eoC()
                        .column()
                            .name("Use Cases")
                            .value("User picks and eats")
                        .eoC()
                    .eoEc()
                .eoL()
                .line()
                    .phase("One")
                    .demand("White")
                    .feature("Jackfruit")
                    .key("PX-1")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .withSuccessfulIssuesImported("PX-15", "PX-16", "PX-17")
                .importIsFinished();
    }

    @Test
    public void importLineWithUnsupportedFields_shouldRejectLineReportingErrorToTwoExtraValuesOfLine() {
        dsl.jira()
            .withProject()
                .key("PX")
                .name("Project X")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .name("Blue")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PX-15")
                        .name("Banana")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                        .withCustomField()
                            .name("Dev TSize")
                            .withId("f1")
                        .eoCf()
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .config()
                .extraField()
                    .id("f1")
                    .columnHeader("Dev TSize")
                    .mappedToColumn("E")
                .eoEf()
                .extraField()
                    .id("f3")
                    .columnHeader("Use Cases")
                    .mappedToColumn("G")
                .eoEf()
            .eoC()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                    .withExtraColumns()
                        .column()
                            .name("Dev TSize")
                            .value("X")
                            .isTypeSizing()
                        .eoC()
                        .column()
                            .name("UAT TSize")
                            .value("S")
                            .isTypeSizing()
                        .eoC()
                        .column()
                            .name("Use Cases")
                            .value("User picks and eats")
                        .eoC()
                    .eoEc()
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .rejectLine(1)
                .withError(
                    "Column “UAT TSize” is not valid for the type Feature and should be left blank; " +
                    "Column “Use Cases” is not valid for the type Feature and should be left blank"
                )
            .and()
                .noIssuesHaveBeenCreated();
    }

    @Test
    public void importUsingAlreadyCreatedVersion_shouldCreateIssueAndEnsureToNotCreateVersions() {
        dsl.jira()
            .withProject()
                .key("PY")
                .name("Project Y")
                .withVersion("Two")
                .withExistingIssues()
                    .issue()
                        .key("PY-1")
                        .name("Blue")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PY-15")
                        .name("Banana")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .config()
                .withTimeboxColumnLetter("S")
            .eoC()
            .lines()
                .line()
                    .number(1)
                    .phase("Two")
                    .demand("Blue")
                    .feature("Banana")
                .eoL()
            .eoLs()
                .importedToProject("PY")
            .then()
                .importIsFinished()
                .withSuccessfulIssueImported("PY-15")
            .and()
                .noVersionHaveBeenCreated();
    }

    @Test
    public void importLineWithSuccessful_ensuringToNotCreateVersion() {
        dsl.jira()
            .withProject()
                .key("PX")
                .name("Project X")
                .withVersion("One")
                .withExistingIssues()
                    .issue()
                        .key("PX-1")
                        .name("Blue")
                        .isDemand()
                    .ofI()
                    .issue()
                        .key("PX-15")
                        .name("Lemon")
                    .ofI()
                .eoIs()
                .withFeatureType()
                    .feature()
                        .name("Feature")
                    .eoF()
                .eoFt()
            .eoP();

        dsl.sizing()
            .config()
                .withTimeboxColumnLetter("S")
            .eoC()
            .lines()
                .line()
                    .number(1)
                    .phase("One")
                    .demand("Blue")
                    .feature("Banana")
                    .key("PX-10")
                .eoL()
                .line()
                    .number(2)
                    .phase("One")
                    .demand("Blue")
                    .feature("Lemon")
                    .key("")
                .eoL()
            .eoLs()
                .importedToProject("PX")
            .then()
                .importIsFinished()
                .withSuccessfulIssueImported("PX-15")
            .and()
                .noVersionHaveBeenCreated();
    }
}
